<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>MicroservicesWithSpringBoot</artifactId>
        <groupId>com.github.singhr2</groupId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>ConfigServer</artifactId>

    <!--
        Don't ignore the dependencyManagement and build sections at the bottom
    -->

    <dependencies>
        <!-- Central management for configuration via Git, SVN, or HashiCorp Vault. -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-config-server</artifactId>
        </dependency>

        <!--
        Eureka Discovery Client :
        a REST based service for locating services for the purpose of load balancing and
        failover of middle-tier servers.
        -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>


        <!-- As per https://www.baeldung.com/spring-cloud-configuration,
             below 2 dependencies are needed, not sure why hence commented.
        -->
        <!--
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
            <version>2.2.2.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>2.2.2.RELEASE</version>
        </dependency>
        -->

    <!-- COMMENTED AS IT IS ALREADY PRESENT IN PARENT MODULE
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.junit.vintage</groupId>
                        <artifactId>junit-vintage-engine</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
    -->

        <!-- added for Spring Cloud Bus -->
        <!-- ===================================== -->
        <!--
        Spring Boot Actuator (OPS)
        Supports built in (or custom) endpoints that let you monitor and manage your application
        - such as application health, metrics, sessions, etc.

        It exposes an endpoint which is need to refresh application configuration data.
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!--
        Add this to every project that needs to refresh property changes dynamically
        (using Rabbit MQ)
        -->
        <!--
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-bus-amqp</artifactId>
        </dependency>
        -->

        <!-- Spring Cloud Bus with Kafka -->
        <!--                Config Server ONLY dependencies         -->
        <!--
            spring-cloud-config-monitor opens up the '/monitor' endpoint on config server
            which listens to any change of events (git webhook) and in turn
            refresh call to spring cloud bus which post the message to kafka broker.
            Any clients listening to the kafka brokerâ€™s topic will get event to refresh.
        -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-config-monitor</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-bus-kafka</artifactId>
        </dependency>
    </dependencies>

    <!-- COMMENTED AS IT IS ALREADY PRESENT IN PARENT MODULE
        <dependencyManagement>
            <dependencies>
                <dependency>
                    <groupId>org.springframework.cloud</groupId>
                    <artifactId>spring-cloud-dependencies</artifactId>
                    <version>${spring-cloud.version}</version>
                    <type>pom</type>
                    <scope>import</scope>
                </dependency>
            </dependencies>
        </dependencyManagement>

        <build>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                </plugin>
            </plugins>
        </build>
    -->
</project>