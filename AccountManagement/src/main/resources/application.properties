# 0 indicates we want random port number; helpful in case of multiple instances
#----------------------------------------------
server.port=0


# This is added to view the different instances in Eureka console.
# else Eura will only show 1 instance (when server.port=0)
#----------------------------------------------
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}


#
#----------------------------------------------
eureka.client.register-with-eureka=true


#
#----------------------------------------------
# eureka.client.fetch-registry=true


# eureka discovery server url
#----------------------------------------------
eureka.client.serviceUrl.defaultZone: ${EUREKA_URI:http://localhost:8761/eureka}

#In some cases, it is preferable for Eureka to advertise the IP addresses of services rather than the hostname.
#true=when the application registers with eureka, it uses its IP address rather than its hostname
# When false, Eureka will provide http://ltin212838.cts.com:55473/
# When true, Eureka wil provide http://192.168.1.5:55473/
#----------------------------------------------
eureka.instance.preferIpAddress: true

# allow restart on code changes
#----------------------------------------------
spring.devtools.restart.enabled=true

logging.level.root=info
#Colourful pattern
logging.pattern.console=%black(%d{ISO8601}) %highlight(%-5level) [%blue(%t)] %yellow(%C{1.}): %msg%n%throwable



#-------------------------------------------------------------
#       SPRING CLOUD BUS with rabbitmq
#-------------------------------------------------------------
### spring.rabbitmq.host = localhost
### spring.rabbitmq.port = 15672
## WARNING : change password for security reason
### spring.rabbitmq.username = guest
### spring.rabbitmq.password = guest

#-------------------------------------------------------------
#       SPRING CLOUD BUS with Apache Kafka (Client config)
#-------------------------------------------------------------
spring.cloud.bus.refresh.enabled=true
spring.cloud.bus.env.enabled=true
endpoints.spring.cloud.bus.refresh.enabled=true
endpoints.spring.cloud.bus.env.enabled=true
spring.cloud.stream.kafka.binder.autoAddPartitions=true
spring.kafka.bootstrap-servers=http://localhost:9092


#-------------------------------------------------------------
#       ??????
#-------------------------------------------------------------
