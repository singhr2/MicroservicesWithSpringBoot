#
#----------------------------------------------
server.port=8011


#
#----------------------------------------------
eureka.client.serviceUrl.defaultZone:${EUREKA_URI:http://localhost:8761/eureka}


# true: when the application registers with eureka, it uses its IP address rather than its hostname.
#----------------------------------------------
eureka.instance.preferIpAddress: true


#
#----------------------------------------------
# eureka.client.register-with-eureka=true


# add dependency before enabling
#----------------------------------------------
# spring.devtools.restart.enabled=true


logging.pattern.console=%black(%d{ISO8601}) %highlight(%-5level) [%blue(%t)] %yellow(%-40.40logger{39}): %msg%n%throwable

# =========================================================================
#               spring-boot-starter-security  enforced AuthN
# =========================================================================
# Username and Password for Spring Security Login Screen
# default username is user, password is shown at startup
# see the following text 'Using generated security password: '
spring.security.user.name = user
spring.security.user.password = password


# =========================================================================
#   (EXPERIMENTAL)  Zuul Timeouts for requests proxied through Zuul
# =========================================================================
ribbon.ConnectTimeout=60000
ribbon.ReadTimeout=60000

hystrix.command.default.execution.isolation.strategy=THREAD

# Disable Hystrix timeout globally (for all services)
## hystrix.command.default.execution.timeout.enabled=false

#To disable timeout foror particular service,
## hystrix.command.<serviceName>.execution.timeout.enabled=false

# Increase the Hystrix timeout to 60s (globally)
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=250000

# Increase the Hystrix timeout to 60s (per service)
## hystrix.command.<serviceName>.execution.isolation.thread.timeoutInMilliseconds: 60000

# =========================================================================
#              WebSecurityConfigurationAdapter related
# =========================================================================

# ??? CHECK : WHY WE NEED TO ADD /users-ws IN ALL URLs
# without that, it is giving 403 (Forbidden)

# H2 console URL
url.h2.console=/users-ws/h2-console/**

# CREATE (POST) new User
url.users.signup=/users-ws/api/users/sign-up

# Note: the url might change if have set custom login url in
# UserWebSecurityConfigurer.getUserAuthenticationFilter()
# By default, spring provides /login
url.users.signin=/users-ws/login

url.users.actuator=/users-ws/actuator/*

url.zuul.actuator=/actuator/*

# The below JWT related propoerty value should be same as in Users Service as well
# This value should be same in Zuul module as well as Users Module
jwt.token.secret=SVqB4JcUD6lsfvqMr-OKUNUphdNn64Eay60978ZlL74

#prefix has 'space at the end' to separate the value
jwt.token.header.value.prefix=Bearer 

jwt.token.header.name=Authorization


#-------------------------------------------------------------
#       SPRING CLOUD BUS RELATED + rabbitmq
#-------------------------------------------------------------
### spring.rabbitmq.host = localhost
### spring.rabbitmq.port = 15672
## WARNING : change password for security reason
### spring.rabbitmq.username = guest
### spring.rabbitmq.password = guest

#-------------------------------------------------------------
#       SPRING CLOUD BUS with Apache Kafka (Client config)
#-------------------------------------------------------------
spring.cloud.bus.refresh.enabled=true
spring.cloud.bus.env.enabled=true
endpoints.spring.cloud.bus.refresh.enabled=true
endpoints.spring.cloud.bus.env.enabled=true
spring.cloud.stream.kafka.binder.autoAddPartitions=true
spring.kafka.bootstrap-servers=http://localhost:9092


#-------------------------------------------------------------
#       Actuator endpoints
#-------------------------------------------------------------
# customize the path /actuator to our custom URL
### management.endpoints.web.base-path=/mymonitoring

# Actuator endpoints let you monitor and manage/ interact with your application.
# Sample Url: http://192.168.1.5:8011/actuator/health

# Uncomment below property ONLY IF you want to enable all endpoints
### management.endpoints.web.exposure.include=*

# Uncomment this if you want only to expose specific endpoints (not all)
# sample endpoints : beans,health,routes,httptrace,info,mappings
management.endpoints.web.exposure.include=health,routes,httptrace,info

# customize response to include details - never(default ) | always | when_authorized
# ENABLE ONLY FOR TESTING , else comment
management.endpoint.health.show-details=always


#--------------------------------------------
# URL of external service to be invoked from Users service
#-------------------------------------------
#url.external.service=http://192.168.1.5:8011/external-ws/api/external/show-all/defence
url.external.service=/external-ws/api/external/show-all/deptt-consulting
