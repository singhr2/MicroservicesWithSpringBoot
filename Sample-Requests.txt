
Udemy course Github URL:
	Source code of this project is available here: 
	Clone it from Github: https://github.com/simplyi/SpringCloudVideoCourse.git
	or download as a ZIP archive: https://github.com/simplyi/SpringCloudVideoCourse/archive/master.zip

	Blog: https://www.appsdeveloperblog.com/spring-cloud-config-server-and-config-client/
	
	Config Server  - configuration properties only
	https://s3-us-west-2.amazonaws.com/appsdeveloperblog.com/config-server-nfs.zip

	Albums Microservice
	https://github.com/simplyi/PhotoAppApiAlbums

	QuickStart. Section 3 source code. 
	https://github.com/simplyi/mobile-app-ws-quick-start.git
		
	
My GitHub repositories:
	1) Project Module 
	https://github.com/singhr2/MicroservicesWithSpringBoot
	
	2) Configurable Properties 
	https://github.com/singhr2/MicroservicesConfigurableProperties


<IMPORTANT>
MicroservicesWithSpringBoot\ConfigServer\src\main\resources\application.properties
	spring.cloud.config.server.git.password=Ranbir#262789
!!! DONOT COMMIT THE ABOVE CHANGE


[ Sequence of starting  ]
~~~~~~~~~~~~~~~~~~~~~~~~~~
	cd C:\SW\kafka_2.13-2.5.0
	Cmd-window-1) $ 01startZookeeper.bat
	(this is shortcut created to below step# 1)
	
	Cmd-window-2) $ 02startKafkaBroker.bat
	(this is shortcut created to below step# 2)
	
	1. Zookeeper
		C:\SW\kafka_2.13-2.5.0\bin\windows\zookeeper-server-start.bat C:\SW\kafka_2.13-2.5.0\config\zookeeper.properties

	2. Kafka broker
		C:\SW\kafka_2.13-2.5.0\bin\windows\kafka-server-start.bat C:\SW\kafka_2.13-2.5.0\config\server.properties
		
	3. Eureka Discovery Server
	4. Config Server  (this needs to be started before zuul as zuul uses some config properties) 
	5. Zuul Proxy
	6. Users Service

Zookeeper
	binding to port 0.0.0.0/0.0.0.0:2181

Kafka	
	Awaiting socket connections on 0.0.0.0:9092. (kafka.network.Acceptor)

Eureka Discovery:
	http://localhost:8761/


Config Server: (port# hardcoded)
	http://localhost:8012/{application}/{profile}

	#(type=Not Found, status=404)
	http://localhost:8012/

	# ???
	http://192.168.1.5:8012/config-server/native

	#https://github.com/singhr2/MicroservicesConfigurableProperties/blob/master/application.properties
	http://localhost:8012/config-server/default

	# https://github.com/singhr2/MicroservicesConfigurableProperties/blob/master/users-ws-dev.properties
	# application.name=users-ws, profile=dev
	http://localhost:8012/users-ws/default
	http://localhost:8012/users-ws/dev
	
	#https://github.com/singhr2/MicroservicesConfigurableProperties/blob/master/zuul-proxy-dev.properties
	# application.name=config-server, profile=dev
	http://localhost:8012/config-server/default
	http://localhost:8012/config-server/dev


Zuul Proxy: (port# hardcoded)
	http://192.168.1.5:8011/actuator/health


H2-Console (in Users Service)
	http://192.168.1.5:8011/users-ws/h2-console


=========================================
POST (Use Postman/Boomrang):
http://192.168.1.5:8011/users-ws/api/users/sign-up

Request Json:
	{
    "firstName":"Ranbir",
    "lastName":"Singh",
    "password":"a1b2c3d4",
    "emailId":"2@a.com"
	}
	
Header : None

=========================================

Note: User must be created (see above) before login

POST
http://192.168.1.5:8011/users-ws/login

Request Json:
	{
		"email": "2@a.com",
		"password": "a1b2c3d4"
	}
	
Header : None

Note the JWT token created, 
this needs to be passed to passed in Header 
Header Name : Authorization
Header value: Bearer {eyJhbG.....pv5A)}

Note: there is space between 'Bearer' keyword and JWT Token value`
=========================================

GET
http://192.168.1.5:8011/users-ws/api/users/health-check

Request Json:
	None
	
Header : 
	Name: Authorization
	Value: Bearer <replace with JWT token after one space>
=========================================

GET
http://192.168.1.5:8011/users-ws/api/users/service-instances/users-ws

Request Json:
	None
	
Header : 
	Name: Authorization
	Value: Bearer <replace with JWT token after one space>

=========================================

GET
http://192.168.1.5:8011/users-ws/api/users/

Request Json:
	None
	
Header : 
	Name: Authorization
	Value: Bearer <replace with JWT token after one space>


=========================================
push confguration changes to all config clients:
Note: 192.168.1.5:8012 refers to config server`

POST 
http://192.168.1.5:8012/actuator/bus-refresh

Request Json:
	None

=========================================
Refresh properties for specific service instance:
Note: 192.168.1.5:55729 refers to specific instance of some service (get from link in Eureka console)

POST 
http://192.168.1.5:55729/actuator/refresh

=========================================


=========================================
